{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.da7336bd673c75802c65.hot-update.js","sources":["webpack:///./Components/Prices.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-float.js","webpack:///./node_modules/core-js/library/fn/parse-float.js","webpack:///./node_modules/core-js/library/modules/_parse-float.js","webpack:///./node_modules/core-js/library/modules/es6.parse-float.js"],"sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass Prices extends Component{\r\n    state = {\r\n        currency: 'USD'\r\n    }\r\n\r\n    usdRate(rate){\r\n        console.log(rate)\r\n        var newString = rate.replace(\",\", \"\");\r\n        console.log(newString.to)\r\n        return parseFloat(newString).toFixed(2)\r\n    }\r\n\r\n    render(){\r\n\r\n        if(this.state.currency === \"USD\"){\r\n\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <ul list-group>\r\n                    <li className='list-group-item'>\r\n                        Currency is in {this.props.bpi.USD.description}:\r\n                        <span className='badge badge-primary'>{this.props.bpi.USD.code}</span>\r\n                        {this.usdRate(this.props.bpi.USD.rate)}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Prices","module.exports = require(\"core-js/library/fn/parse-float\");","require('../modules/es6.parse-float');\nmodule.exports = require('../modules/_core').parseFloat;\n","var $parseFloat = require('./_global').parseFloat;\nvar $trim = require('./_string-trim').trim;\n\nmodule.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {\n  var string = $trim(String(str), 3);\n  var result = $parseFloat(string);\n  return result === 0 && string.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n","var $export = require('./_export');\nvar $parseFloat = require('./_parse-float');\n// 18.2.4 parseFloat(string)\n$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA7BA;AACA;AA+BA;;;;;;;;;;;AClCA;;;;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;;;;;;;;A","sourceRoot":""}